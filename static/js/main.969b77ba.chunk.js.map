{"version":3,"sources":["Components/BasicInfoForm/BasicInfoForm.js","Components/MealsList/MealsList.js","Components/Report/Report.js","Components/MainPage/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["BasicInfoForm","props","Fragment","Typography","variant","gutterBottom","Grid","container","spacing","item","xs","sm","FormControl","fullWidth","InputLabel","id","Select","labelId","align","value","age","onChange","ev","setAge","target","MenuItem","gender","setGender","Input","height","setHeight","endAdornment","InputAdornment","position","inputProps","weight","setWeight","columns","label","minWidth","format","toLocaleString","useStyles","makeStyles","theme","root","width","maxHeight","buttons","display","justifyContent","button","marginTop","marginLeft","MealsList","classes","setParam","paramName","paramValue","mealId","meal","mealsList","find","f","newMealsList","filter","sort","a","b","setMealsList","TableContainer","className","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","style","TableBody","row","hover","role","tabIndex","foodId","portionValue","portionTypeId","color","onClick","Button","Math","floor","random","foodName","listItem","padding","total","fontWeight","title","Report","List","disablePadding","ListItem","ListItemText","primary","secondary","ListItemSecondaryAction","appBar","backgroundColor","layout","marginRight","breakpoints","up","paper","marginBottom","stepper","steps","mealsListMock","MainPage","React","useState","activeStep","setActiveStep","checkNumericField","number","isNaN","convertedNumber","replace","isNumeric","Number","CssBaseline","Paper","component","Stepper","Step","StepLabel","length","step","Error","getStepContent","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.969b77ba.chunk.js","sourcesContent":["import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nexport default function BasicInfoForm(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Dados Iniciais\r\n      </Typography>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth>       \r\n          <InputLabel id=\"age-field-input-label-id\">Idade</InputLabel>\r\n          <Select\r\n            fullWidth    \r\n            labelId=\"age-field-label-id\"\r\n            id=\"age-field-id\"\r\n            align=\"left\"\r\n            value={props.age}\r\n            onChange={(ev) => props.setAge(ev.target.value)}\r\n          >\r\n            <MenuItem value={0}></MenuItem>\r\n            <MenuItem value={1}>0 a 6 meses</MenuItem>\r\n            <MenuItem value={2}>6 meses a 1 ano</MenuItem>\r\n            <MenuItem value={3}>1 ano a 2 anos</MenuItem>\r\n            <MenuItem value={4}>2 anos a 4 anos</MenuItem>\r\n            <MenuItem value={5}>4 anos a 6 anos</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <FormControl fullWidth>\r\n            <InputLabel id=\"gender-field-input-label-id\">Gênero</InputLabel>\r\n            <Select\r\n              fullWidth    \r\n              labelId=\"gender-field-label-id\"\r\n              id=\"gender-field-id\"\r\n              align=\"left\"\r\n              value={props.gender}\r\n              onChange={(ev)=> props.setGender(ev.target.value)}\r\n            >\r\n              <MenuItem value={0}></MenuItem>\r\n              <MenuItem value={1}>Feminino</MenuItem>\r\n              <MenuItem value={2}>Masculino</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <FormControl fullWidth>\r\n        <InputLabel id=\"height-field-input-label-id\">Altura</InputLabel>\r\n          <Input\r\n            id=\"height-field-label-id\"\r\n            value={props.height}\r\n            onChange={(ev)=> props.setHeight(ev.target.value)}\r\n            endAdornment={<InputAdornment position=\"end\">m</InputAdornment>}\r\n            aria-describedby=\"standard-weight-helper-text\"\r\n            inputProps={{\r\n              'aria-label': 'height',\r\n            }}\r\n          />\r\n        </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        <FormControl fullWidth>\r\n        <InputLabel id=\"weight-field-input-label-id\">Peso</InputLabel>\r\n          <Input\r\n            id=\"weight-field-id\"\r\n            value={props.weight}\r\n            onChange={(ev)=> props.setWeight(ev.target.value)}\r\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\r\n            aria-describedby=\"standard-weight-helper-text\"\r\n            inputProps={{\r\n              'aria-label': 'height',\r\n            }}\r\n          />\r\n        </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nconst columns = [\r\n  { id: 'name', label: 'Nome', minWidth: 170 },\r\n  { id: 'portion', label: 'Porção', minWidth: 100 },\r\n  {\r\n    id: 'portionKind',\r\n    label: 'Tipo de Medida',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'remove',\r\n    label: 'Remover',\r\n    minWidth: 170,\r\n    align: 'right', \r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n];\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: \"300px\",\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function MealsList(props) {\r\n  const classes = useStyles();\r\n\r\n  const generateRandomNumber = () => {\r\n    return Math.floor(Math.random() * 100000000);\r\n  };\r\n\r\n  const createNewMeal = () => {\r\n    return {mealId: generateRandomNumber(), foodName: '', foodId: 0, portionValue: 0, portionTypeId: 0};\r\n  }\r\n\r\n  const removeMeal = (mealId) => {\r\n    props.setMealsList([ ...props.mealsList.filter(f => f.mealId !== mealId)]);\r\n  }\r\n\r\n  const addMeal = () => {\r\n    props.setMealsList([ ...props.mealsList, createNewMeal()]);\r\n  }\r\n\r\n  const setParam = (paramName, paramValue, mealId) => {\r\n    let meal = props.mealsList.find(f => f.mealId === mealId);\r\n    meal[paramName] = paramValue;\r\n    const newMealsList = [ ...props.mealsList.filter(f => f.mealId !== mealId), meal].sort((a, b) => a.mealId - b.mealId);\r\n    props.setMealsList(newMealsList);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n      Alimentação\r\n      </Typography>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.mealsList.map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.mealId}>\r\n                      <TableCell align='center'>\r\n                      <FormControl fullWidth>       \r\n                        <Select\r\n                          fullWidth    \r\n                          labelId={`meal-select-label-${row.mealId}`}\r\n                          id={`meal-select-${row.mealId}`}\r\n                          value={row.foodId}\r\n                          onChange={(ev) => setParam('foodId', ev.target.value, row.mealId)}\r\n                        >\r\n                          <MenuItem value={0}></MenuItem>\r\n                          <MenuItem value={1}>Sementes de abóbora</MenuItem>\r\n                          <MenuItem value={2}>Pistache</MenuItem>\r\n                          <MenuItem value={3}>Cacau em pó</MenuItem>\r\n                          <MenuItem value={4}>Damasco seco</MenuItem>\r\n                          <MenuItem value={5}>Tofu</MenuItem>\r\n                          <MenuItem value={6}>Uva passa</MenuItem>\r\n                          <MenuItem value={7}>Coco seco</MenuItem>\r\n                          <MenuItem value={8}>Noz</MenuItem>\r\n                          <MenuItem value={9}>Feijão branco cozido </MenuItem>\r\n                          <MenuItem value={10}>Feijão preto cozido</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                        <FormControl fullWidth>\r\n                            <Input\r\n                              id={`portion-input-${row.mealId}`}\r\n                              value={row.portionValue}\r\n                              onChange={(ev) => setParam('portionValue', ev.target.value, row.mealId)}\r\n                              aria-describedby=\"standard-weight-helper-text\"\r\n                              inputProps={{\r\n                                'aria-label': 'height',\r\n                              }}\r\n                            />\r\n                        </FormControl>\r\n                      </TableCell>\r\n                      <TableCell align='center'>\r\n                      <FormControl fullWidth>       \r\n                        <Select\r\n                          fullWidth    \r\n                          labelId={`portiontype-select-label-${row.mealId}`}\r\n                          id={`portiontype-select-${row.mealId}`}\r\n                          value={row.portionTypeId}\r\n                          onChange={(ev) => setParam('portionTypeId', ev.target.value, row.mealId)}\r\n                          >\r\n                          <MenuItem value={0}></MenuItem>\r\n                          <MenuItem value={1}>Colher de sopa</MenuItem>\r\n                          <MenuItem value={2}>Colher de café</MenuItem>\r\n                          <MenuItem value={3}>Colher de sobremesa</MenuItem>\r\n                          <MenuItem value={4}>Xícara de chá</MenuItem>\r\n                          <MenuItem value={5}>Gramas</MenuItem>\r\n                        </Select>\r\n                      </FormControl>\r\n                      </TableCell>\r\n                  <TableCell align='right'>\r\n                   <DeleteOutlineIcon color=\"primary\" onClick={() => removeMeal(row.mealId)}\r\n                        />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div className={classes.buttons}>\r\n                    <Button variant=\"contained\"\r\n                    color=\"primary\" className={classes.button}\r\n                    onClick={() => {addMeal()}}>\r\n                      Adicionar Alimento\r\n                    </Button>\r\n                </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Report() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Relatório\r\n      </Typography>\r\n      <List disablePadding>\r\n        <ListItem className={classes.listItem} key=\"iron-value\">\r\n            <ListItemText primary=\"Total de ferro consumido\" secondary=\"Valor recomendado\" />\r\n            <ListItemSecondaryAction>\r\n              <ListItemText align=\"left\" primary=\"145mg\" secondary=\"100mg\" />\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n      </List>\r\n      {/* <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>John Smith</Typography>\r\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid> */}\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BasicInfoForm from '../BasicInfoForm/BasicInfoForm';\r\nimport MealsList from '../MealsList/MealsList';\r\nimport Report from '../Report/Report';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n    backgroundColor: 'grey'\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    backgroundColor: 'grey',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2))]: {\r\n      width: 700,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: '0',\r\n    marginBottom: theme.spacing(1),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Dados Iniciais', 'Alimentação', 'Relatório'];\r\n\r\nconst mealsListMock = [\r\n  {mealId: 1, foodName: 'Sementes de abóbora', foodId: 1, portionValue: 2, portionTypeId: 5},\r\n  {mealId: 2, foodName: 'Pistache', foodId: 2, portionValue: 1, portionTypeId: 4},\r\n  {mealId: 3, foodName: 'Cacau em pó', foodId: 3, portionValue: 7, portionTypeId: 3},\r\n  {mealId: 4, foodName: 'Tofu', foodId: 5, portionValue: 9, portionTypeId: 2},\r\n  {mealId: 5, foodName: 'Feijão preto cozido', foodId: 10, portionValue: 4, portionTypeId: 1}\r\n].sort((a, b) => a.mealId - b.mealId);\r\n\r\nconst isNumeric = (number) => {\r\n  if (!isNaN(number)) return true;\r\n\r\n  const convertedNumber =  number.replace(',','.');\r\n  return !isNaN(convertedNumber);\r\n}\r\n\r\nexport default function MainPage() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [age, setAge] = React.useState(0);\r\n  const [gender, setGender] = React.useState(0);\r\n  const [height, setHeight] = React.useState(0);\r\n  const [weight, setWeight] = React.useState(0);\r\n  const [mealsList, setMealsList] = React.useState(mealsListMock);\r\n\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return <BasicInfoForm \r\n        age={age}\r\n        setAge={setAge}\r\n        gender={gender}\r\n        setGender={setGender}\r\n        height={height}\r\n        setHeight={setHeight}\r\n        weight ={weight }\r\n        setWeight={setWeight}\r\n        />;\r\n      case 1:\r\n        return <MealsList\r\n        mealsList={mealsList}\r\n        setMealsList={setMealsList}\r\n        />;\r\n      case 2:\r\n        return <Report />;\r\n      default:\r\n        throw new Error('Unknown step');\r\n    }\r\n  }\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const checkNumericField = (number) => {\r\n    if (!isNumeric(number)) return false;\r\n\r\n    return isNaN(number) ? Number(number.replace(',','.')) > 0 : number > 0;\r\n  }\r\n\r\n  const checkIfBsicFormIsFilled = () => {\r\n    return age > 0 && gender > 0 && checkNumericField(height) && checkNumericField(weight) > 0;\r\n  }\r\n\r\n  const checkIfMealsListIsFilled = () => {\r\n    return mealsList.length > 0;\r\n  }\r\n\r\n  const isNextButtonDisabled = () => {\r\n    if (activeStep === 0)\r\n      return !checkIfBsicFormIsFilled();\r\n\r\n    if (activeStep === 1)\r\n      return !checkIfMealsListIsFilled();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Calculadora de Consumo de Ferro\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #2001539. We have emailed your order confirmation, and will\r\n                  send you an update when your order has shipped.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Voltar\r\n                    </Button>\r\n                  )}\r\n                  {activeStep !== steps.length - 1 && ( \r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                    disabled={isNextButtonDisabled()}\r\n                  >\r\n                    Próximo\r\n                  </Button>)}\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","import './App.css';\nimport MainPage from \"./Components/MainPage/MainPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MainPage/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}